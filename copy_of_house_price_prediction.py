# -*- coding: utf-8 -*-
"""Copy of House_price_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yGje4vc3EYi5RnZxbNxLfKpGbhLQNp-R
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import re
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

boston=load_boston()
df=pd.DataFrame(boston.data)

df.head()

df.columns=boston.feature_names

df.head()

df["PRICE"]=boston.target
df.head()

df.tail()

df.shape

df.columns

df.dtypes

df.nunique()

df.isnull()

df.isnull().sum()

df.describe()

df.corr

plt.figure(figsize=(10,10))
sns.heatmap(data=df.corr(),annot=True,cmap="Greens")

sns.pairplot(df,size=5)

plt.figure(figsize=(50,50))
df.boxplot()

df.PRICE.max()

df.PRICE.min()

df.PRICE.std()

df.to_csv('boston_dataset.csv')

df.head()

x=np.array(df.drop("PRICE", axis=1))
y=np.array(df.PRICE)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

len(x_train)

len(x_test)

len(y_train)

len(y_test)

model=LinearRegression()

model.fit(x_train,y_train)

model.intercept_

model.coef_

y_test

y_pred=model.predict(x_test)

y_pred

model.score(x_test,y_test)